/* We use the Noto family for typography;

- Noto Display is used for the heading logo.
- Noto Sans is used for body text. The default weight is 400, but bold text uses a weight of 700.
- Noto Sans Mono is used for code. The default weight is 400.

Previously, everything on this site was monospaced, but that Sucked Ass.
It was cute in its own kinda way, though. */

@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+Display:wght@700&family=Noto+Sans+Mono:wght@400;700&family=Noto+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap");

/* My color names are perfect. */

:root {
  --parchment: #B0B0BF;
  --faint: #787891;
  --greyish: #2e2e38;
  --blackish: #1c1c22;
  --sakura: #FCC5D3;
  --warm-pink: #f99fb4;
  --warmer-pink: #f55178;
  --hot-pink: #f32b5a;
  --sky: #67aaf9;
  --emerald: #62c370;
  --banana: #F5DD90;
  --tangerine: #EC7D10;
  --plain: #f6f4f3;
}

body {
  background-color: var(--blackish);
  color: var(--plain);
  display: flex;
  flex-direction: column;
  font-family: "Noto Sans";
  margin: 0 auto;
}

/* This is an attempt at fixing an absolutely vexing display inconsistency on firefox mobile */

html,
body {
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
}

/* I'm not sure if this is really the greatest approach here. From the testing I did it seemed fine though. */

@media screen and (max-width: 1000px) {
  body {
    width: 87.5%;
  }
}

@media screen and (min-width: 1000px) {
  body {
    width: 77.5%;
  }
}

@media screen and (min-width: 1700px) {
  body {
    width: 67.5%;
  }
}

p {
  /* Paragraphs need their own margins since the default ones look ugly */
  margin: 0.5rem 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--hot-pink);
  font-weight: 700;
  /* Margins for headers look better consistent */
  margin: 1rem 0;
  /* We need to keep the multiplier at 1 by default */
  --heading-multiplier: 1;
}

/* We don't want to double up on margins for headings */

.navbar + h1,
.navbar + h2,
.navbar + h3,
.navbar + h4,
.navbar + h5,
.navbar + h6 {
  margin-top: 0;
}

/* On smaller displays we want to make headings a bit smaller */

@media screen and (max-width: 700px) {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    --heading-multiplier: 0.75;
  }
}

/* This is evil */

h1 {
  font-size: calc(2rem * var(--heading-multiplier));
}

h2 {
  font-size: calc(1.5rem * var(--heading-multiplier));
}

h3 {
  font-size: calc(1.17rem * var(--heading-multiplier));
}

h4 {
  font-size: calc(1rem * var(--heading-multiplier));
}

h5 {
  font-size: calc(0.83rem * var(--heading-multiplier));
}

h6 {
  font-size: calc(0.75rem * var(--heading-multiplier));
}

a {
  color: var(--plain);
  text-decoration-color: var(--warm-pink);
}

a:hover {
  color: var(--warmer-pink);
  text-decoration-color: var(--warmer-pink);
}

a:active {
  color: var(--hot-pink);
  text-decoration-color: var(--hot-pink);
}

/* Inline code needs its own rounding and background. */

code {
  background-color: var(--greyish);
  border-radius: 0.25rem;
  color: var(--sakura);
  padding: 0.1rem;

  /* For the sake of readability */
  font-family: "Noto Sans Mono", monospace;
  font-weight: 700;
}

pre {
  border-radius: 0.5rem;
  background-color: var(--greyish);
  padding: 0.5rem;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

/* Code inside a `pre` block does not need the styling that inline code does. */

pre code {
  border-radius: 0rem;
  color: var(--plain);
  padding: 0rem;
  max-width: 100%;
}

blockquote {
  background-color: var(--greyish);
  border-left: 0.5rem solid var(--hot-pink);
  border-radius: 0.25rem;
  padding: 0.5rem 1rem;
  margin: auto 0;
}

blockquote p {
  margin: 0.25rem 0rem;
}

/* Borders need to be collapsed otherwise they look extremely ugly. */

table {
  border-spacing: 0;
  border-collapse: collapse;
}

/* Any text in a table header gets to be pretty. */

thead {
  color: var(--hot-pink);
}

td,
th {
  border: 1px solid var(--parchment);
  padding: 0.5rem 0.5rem;
}

li::marker {
  color: var(--hot-pink);
}

img {
  border-radius: 0.25rem;
  max-width: 100%;
  width: 100%;
}

.image-gallery {
  display: flex;
  gap: 1rem 0.5rem;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

/* This is used on the error page. It's also kinda a meme. */

.center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.navbar {
  display: flex;
  margin: 1.5rem 0;
  justify-content: center;
  align-self: center;
  align-items: center;
  flex-wrap: wrap;
  flex-direction: row;
  width: 100%;
}

.navbar-logo {
  background-color: var(--hot-pink);
  color: var(--blackish);
  display: inline-block;
  font-size: 2.5rem;
  font-family: "Noto Sans Display", sans-serif;
  font-weight: 700;
  margin: 0;
  padding: 0.5rem 1rem;
}

.navbar-content {
  display: flex;
  justify-content: center;
  align-self: center;
  align-items: center;

  padding: 0 0.5rem;
}

.navbar-content * {
  text-align: center;
  padding: 0.5rem;
}

.navbar-rest {
  background-color: var(--hot-pink);
  background-image: repeating-linear-gradient(
    to right,
    transparent,
    transparent 0.5rem,
    var(--blackish) 0.5rem,
    var(--blackish) 1rem
  );
  display: inline-block;
  align-self: stretch;
  flex-grow: 1;
}

/* Mobile-specific navbar styling */
@media screen and (max-width: 700px) {
  .navbar-logo {
    flex-basis: 100%;
    text-align: center;
    padding: 0.5rem 0.25rem;
  }

  .navbar-content {
    width: 100%;
  }

  .navbar-content * {
    flex-grow: 1;
  }

  .navbar-rest {
    flex-basis: 100%;
    height: 2rem;
  }
}

.post-list-item {
  display: block;
  border-bottom: solid var(--greyish);
  padding: 1rem 0;
}

.post-description {
  display: block;
}

.post-description::after {
  content: "";
  display: block;
  margin: 1rem 0;
  border-bottom: solid var(--greyish);
}

.post-list .post-list-item:last-of-type {
  border-bottom: none;
}

.post-list-item .post-header, .post-description .post-header {
  margin: 0 auto;
}

/* We need to use an explicit `margin` attribute here, since otherwise the timestamp will inherit its margin from `h1`
and co, which is undesirable */

.post-list-item .post-timestamp, .post-description .post-timestamp {
  color: var(--parchment);
  margin: 0.25rem 0 0;
}

/* The following is simply theming for highlighting */

.hl-comment {
  color: var(--parchment);
}

.hl-constant {
  color: var(--lavender);
}

.hl-constant.hl-numeric,
.hl-string {
  color: var(--sakura);
}

.hl-keyword.hl-control,
.hl-entity.hl-name.hl-function,
.hl-support.hl-macro,
.hl-entity.hl-name,
.hl-support.hl-type,
.hl-storage.hl-type,
.hl-meta.hl-generic,
.hl-meta.hl-generic .hl-storage.hl-type.hl-rust,
.hl-meta.hl-generic .hl-meta.hl-path.hl-rust,
.hl-meta.hl-function.hl-parameters,
.hl-return-type,
.hl-constant.hl-other.hl-placeholder {
  color: var(--hot-pink)
}

/* What follows is an illegal set of overloads since CSS can't do what I want otherwise. */

.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust {
  color: var(--hot-pink)
}

.hl-storage.hl-modifier,
.hl-keyword.hl-operator,
.hl-punctuation.hl-accessor,
.hl-storage.hl-type.hl-impl,
.hl-storage.hl-type.hl-function,
.hl-storage.hl-type.hl-declaration,
.hl-keyword.hl-control.hl-rust.hl-async,
.hl-keyword.hl-other,
.hl-entity.hl-name.hl-constant {
  color: var(--faint);
}

.hl-parameter.hl-variable,
.hl-variable.hl-function,
.hl-entity.hl-other,
.hl-constant.hl-other,
.hl-source {
  color: var(--sky);
}

.hl-punctuation.hl-group,
.hl-punctuation.hl-block,
.hl-meta.hl-annotation,
.hl-punctuation.hl-separator,
.hl-punctuation.hl-terminator,
.hl-punctuation.hl-definition.hl-table,
.hl-punctuation.hl-definition.hl-array,
.hl-punctuation.hl-definition.hl-inline-table,
.hl-punctuation.hl-definition.hl-key-value,
.hl-entity.hl-table,
.hl-meta.hl-annotation > .hl-meta.hl-path,
.hl-meta.hl-annotation > .hl-meta > .hl-keyword,
.hl-meta.hl-generic > .hl-punctuation,
.hl-meta.hl-function > .hl-punctuation,
.hl-meta.hl-function > .hl-punctuation.hl-comma {
  color: var(--plain)
}

.hl-constant {
  color: var(--emerald);
}
