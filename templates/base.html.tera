<!DOCTYPE html>
<html lang="en">

<head>
  <title>{% block title %} Kaylynn {% endblock title %}</title>
  <meta charset="utf-8" />
  <meta name="author" content="Kaylynn" />
  <meta property="og:site_name" content="Kaylynn's blog">
  {% if og_title %}
  <meta property="og:title" content="{{ og_title }}">
  {% endif %}
  {% if og_description %}
  <meta property="og:description" content="{{ og_description }}">
  {% endif %}
  <link rel="stylesheet" href="/style.css" />
  <link rel="shortcut icon" type="image/png" href="favicon.png" />
</head>

{% block navbar %}
<nav class="navbar">
  <script type="text/javascript" src="/tinycolor.js" async></script>
  <script>
    function gay() {
      let sheet = document.styleSheets[0];
      let rules = Array.from(sheet.cssRules);
      let root_rule = rules.find(rule => rule.cssText.startsWith(":root"));

      // I've got no clue if there's a better way to do this.
      // It doesn't seem like there's an iteration protocol for this kind of element?
      let ruleNames = [];
      for (let i of Array(root_rule.style.length).keys()) {
        ruleNames.push(root_rule.style[i])
      }

      const cycle = function () {
        for (let ruleName of ruleNames) {
          let color = tinycolor(window.getComputedStyle(document.documentElement).getPropertyValue(ruleName)).spin(1).toHexString();
          document.documentElement.style.setProperty(ruleName, color);
        }
      };

      window.setInterval(cycle, 33);
    }

    function arrayIsEqual(first, second) {
      return (
        Array.isArray(first)
        && Array.isArray(second)
        && first.length === second.length
        && first.every((item, index) => item === second[index])
      )
    }

    let konamiCode = [
      "ArrowUp",
      "ArrowUp",
      "ArrowDown",
      "ArrowDown",
      "ArrowLeft",
      "ArrowRight",
      "ArrowLeft",
      "ArrowRight",
      "b",
      "a",
    ];

    let lastKeypress = 0;
    let keys = [];
    let ooerized = false;

    window.addEventListener("keydown", event => {
      if (ooerized || event.isComposing || event.keyCode === 229) {
        return;
      }

      let now = Date.now() / 1000 | 0;
      if (now - lastKeypress > 5) {
        keys = [];
      }

      lastKeypress = now;
      keys.push(event.key);

      // Comparing arrays with `==` doesn't work as arrays are actually objects.
      // Not a fun joke.
      if (arrayIsEqual(keys.slice(-10), konamiCode)) {
        console.log("yes")
        document.head.insertAdjacentHTML(
          "beforeend",
          '<link rel="stylesheet" href="ooer.css" />'
        );
        ooerized = true;
        delete keys;
        delete lastKeypress;
      }
    });
  </script>

  <h1 class="navbar-logo" onclick="gay()">kaylynn.gay</h1>
  <a class="navbar-content" href="/">Home</a>
  <a class="navbar-content" href="/about">About me</a>
  <a class="navbar-content" href="/blog">Blog</a>
  <div class="navbar-rest"></div>

</nav>
{% endblock navbar %}

<body>
  {% block content %}{% endblock content %}
</body>

</html>