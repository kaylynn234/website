@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&display=swap");
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Display:wght@700&display=swap');

/* My color names are perfect. */

:root {
  --parchment: #B0B0BF;
  --faint: #787891;
  --greyish: #2e2e38;
  --blackish: #1c1c22;
  --sakura: #FCC5D3;
  --warm-pink: #f99fb4;
  --warmer-pink: #f55178;
  --hot-pink: #f32b5a;
  --sky: #67aaf9;
  --emerald: #62c370;
  --banana: #F5DD90;
  --tangerine: #EC7D10;
  --plain: #f6f4f3;
}

body {
  background-color: var(--blackish);
  color: var(--plain);
  display: flex;
  flex-direction: column;
  font-family: "JetBrains Mono", monospace;
  margin: 0 auto;
}

/* This is an attempt at fixing an absolutely vexing display inconsistency on firefox mobile */

html,
body {
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
}

/* I'm not sure if this is really the greatest approach here. From the testing I did it seemed fine though. */

@media screen and (max-width: 1000px) {
  body {
    width: 87.5%;
  }
}

@media screen and (min-width: 1000px) {
  body {
    width: 900px;
  }
}

@media screen and (min-width: 1700px) {
  body {
    width: 1500px;
  }
}

p {
  /* Paragraphs need their own margins since the default ones look ugly */
  margin: 0.5rem 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--hot-pink);
  font-weight: 700;
  /* Margins for headers look better consistent */
  margin: 1.5rem 0;
  /* We need to keep the multiplier at 1 by default */
  --heading-multiplier: 1;
}

@media screen and (max-width: 700px) {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    /* On smaller displays we want to make headings a bit smaller */
    --heading-multiplier: 0.75;
  }
}

/* This is evil */
h1 {
  font-size: calc(2rem * var(--heading-multiplier));
}

h2 {
  font-size: calc(1.5rem * var(--heading-multiplier));
}

h3 {
  font-size: calc(1.17rem * var(--heading-multiplier));
}

h4 {
  font-size: calc(1rem * var(--heading-multiplier));
}

h5 {
  font-size: calc(0.83rem * var(--heading-multiplier));
}

h6 {
  font-size: calc(0.75rem * var(--heading-multiplier));
}

a {
  color: var(--plain);
  text-decoration-color: var(--warm-pink);
}

a:hover {
  color: var(--warmer-pink);
  text-decoration-color: var(--warmer-pink);
}

a:active {
  color: var(--hot-pink);
  text-decoration-color: var(--hot-pink);
}

/* Inline code needs its own rounding and background. */

code {
  background-color: var(--greyish);
  border-radius: 0.25rem;
  color: var(--sakura);
  padding: 0.1rem;
}

pre {
  border-radius: 0.5rem;
  background-color: var(--greyish);
  padding: 0.5rem;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

/* Code inside a `pre` block does not need the styling that inline code does. */

pre code {
  border-radius: 0rem;
  color: var(--plain);
  padding: 0rem;
  max-width: 100%;
}

blockquote {
  background-color: var(--greyish);
  border-left: 0.5rem solid var(--hot-pink);
  border-radius: 0.25rem;
  padding: 0.5rem 1rem;
  margin: auto 0;
}

blockquote p {
  margin: 0.25rem 0rem;
}

/* Borders need to be collapsed otherwise they look extremely ugly. */

table {
  border-spacing: 0;
  border-collapse: collapse;
}

/* Any text in a table header gets to be pretty. */

thead {
  color: var(--hot-pink);
}

td,
th {
  border: 1px solid var(--parchment);
  padding: 0.5rem 0.5rem;
}

li::marker {
  color: var(--hot-pink);
}

img {
  border-radius: 0.25rem;
  max-width: 100%;
  width: 100%;
}

.image-row img {
  margin: 0.5rem;
}

.image-row img:first-of-type {
  margin-left: 0;
}

.image-row img:last-of-type {
  margin-right: 0;
}

.image-row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  min-width: none;
}

/* This is dumb and hacky and bad. But I suck at CSS so.. it works? */

@media screen and (max-width: 700px) {
  .image-row img {
    margin: 0.5rem;
  }
  .image-row {
    flex-direction: column;
  }
  .image-row img:first-of-type {
    margin-left: 0.5rem;
    margin-top: 0;
  }
  .image-row img:last-of-type {
    margin-right: 0.5rem;
    margin-bottom: 0;
  }
}

/* This is used on the error page. It's also kinda a meme. */

.center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.navbar {
  display: flex;
  margin: 1.5rem 0 0.75rem;
  justify-content: center;
  align-self: center;
  align-items: center;
  flex-wrap: wrap;
  flex-direction: row;
  width: 100%;
}

.navbar-logo {
  background-color: var(--hot-pink);
  color: var(--blackish);
  display: inline-block;
  font-size: 2.5rem;
  font-family: "Noto Sans Display", sans-serif;
  font-weight: 700;
  margin: 0;
  padding: 0.5rem 1rem;
}

.navbar-content {
  text-align: center;
  padding: 0.5rem 1rem;
}

.navbar-rest {
  background-image: repeating-linear-gradient(
    to right,
    var(--hot-pink), var(--hot-pink) 0.5rem,
    var(--blackish) 0.5rem,
    var(--blackish) 1rem
  );
  display: inline-block;
  align-self: stretch;
  flex-grow: 1;
}

/* Mobile-specific navbar styling */
@media screen and (max-width: 700px) {
  .navbar-logo {
    flex-basis: 100%;
    text-align: center;
  }

  .navbar-content {
    flex-basis: max-content;
    flex-grow: 1;
    align-self: center;
  }

  .navbar-rest {
    flex-basis: 100%;
    height: 2rem;
  }
}

.post-list-item {
  display: block;
  padding-bottom: 1rem;
  border-bottom: solid var(--greyish);
  margin-top: 1rem;
}

.post-list-item .post-header, .post-description .post-header {
  margin: 0 auto;
}

.post-list-item .post-timestamp, .post-description .post-timestamp {
  color: var(--parchment);
  margin-top: 0.5rem;
}

.post-description .post-timestamp {
  margin-bottom: 1rem;
}

/* The following is simply theming for highlighting */

.hl-comment {
  color: var(--parchment);
}

.hl-constant {
  color: var(--lavender);
}

.hl-constant.hl-numeric,
.hl-string {
  color: var(--sakura);
}

.hl-keyword.hl-control,
.hl-entity.hl-name.hl-function,
.hl-support.hl-macro,
.hl-entity.hl-name,
.hl-support.hl-type,
.hl-storage.hl-type,
.hl-meta.hl-generic,
.hl-meta.hl-generic .hl-storage.hl-type.hl-rust,
.hl-meta.hl-generic .hl-meta.hl-path.hl-rust,
.hl-meta.hl-function.hl-parameters,
.hl-return-type,
.hl-constant.hl-other.hl-placeholder {
  color: var(--hot-pink)
}

/* What follows is an illegal set of overloads since CSS can't do what I want otherwise. */

.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust,
.hl-keyword.hl-other.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust + .hl-meta.hl-path.hl-rust {
  color: var(--hot-pink)
}

.hl-storage.hl-modifier,
.hl-keyword.hl-operator,
.hl-punctuation.hl-accessor,
.hl-storage.hl-type.hl-impl,
.hl-storage.hl-type.hl-function,
.hl-storage.hl-type.hl-declaration,
.hl-keyword.hl-control.hl-rust.hl-async,
.hl-keyword.hl-other,
.hl-entity.hl-name.hl-constant {
  color: var(--faint);
}

.hl-parameter.hl-variable,
.hl-variable.hl-function,
.hl-entity.hl-other,
.hl-constant.hl-other,
.hl-source {
  color: var(--sky);
}

.hl-punctuation.hl-group,
.hl-punctuation.hl-block,
.hl-meta.hl-annotation,
.hl-punctuation.hl-separator,
.hl-punctuation.hl-terminator,
.hl-punctuation.hl-definition.hl-table,
.hl-punctuation.hl-definition.hl-array,
.hl-punctuation.hl-definition.hl-inline-table,
.hl-punctuation.hl-definition.hl-key-value,
.hl-entity.hl-table,
.hl-meta.hl-annotation > .hl-meta.hl-path,
.hl-meta.hl-annotation > .hl-meta > .hl-keyword,
.hl-meta.hl-generic > .hl-punctuation,
.hl-meta.hl-function > .hl-punctuation,
.hl-meta.hl-function > .hl-punctuation.hl-comma {
  color: var(--plain)
}

.hl-constant {
  color: var(--emerald);
}
